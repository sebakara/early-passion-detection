{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: 'http://localhost:8000/api/v1',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 10000\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API functions\nexport const loginUser = async (email, password) => {\n  const formData = new FormData();\n  formData.append('username', email);\n  formData.append('password', password);\n  const response = await api.post('/auth/login', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n\n  // Get user info after successful login\n  const userResponse = await api.get('/auth/me');\n  return {\n    access_token: response.data.access_token,\n    user: userResponse.data\n  };\n};\nexport const registerUser = async userData => {\n  const response = await api.post('/auth/register', userData);\n\n  // Login after successful registration\n  const loginResponse = await loginUser(userData.email, userData.password);\n  return {\n    access_token: loginResponse.access_token,\n    user: loginResponse.user\n  };\n};\nexport const logoutUser = async () => {\n  try {\n    await api.post('/auth/logout');\n  } catch (error) {\n    // Ignore logout errors\n    console.log('Logout error:', error);\n  }\n};\nexport const getCurrentUser = async () => {\n  const response = await api.get('/auth/me');\n  return response.data;\n};\nexport const refreshToken = async () => {\n  const response = await api.post('/auth/refresh');\n  return response.data;\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","timeout","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","loginUser","email","password","formData","FormData","append","post","userResponse","get","access_token","data","user","registerUser","userData","loginResponse","logoutUser","console","log","getCurrentUser","refreshToken"],"sources":["/Users/macbookpro2020/Desktop/projects/AImodels/passiondetection/frontend/src/api/auth.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: 'http://localhost:8000/api/v1',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  timeout: 10000,\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API functions\nexport const loginUser = async (email, password) => {\n  const formData = new FormData();\n  formData.append('username', email);\n  formData.append('password', password);\n  \n  const response = await api.post('/auth/login', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  });\n  \n  // Get user info after successful login\n  const userResponse = await api.get('/auth/me');\n  \n  return {\n    access_token: response.data.access_token,\n    user: userResponse.data,\n  };\n};\n\nexport const registerUser = async (userData) => {\n  const response = await api.post('/auth/register', userData);\n  \n  // Login after successful registration\n  const loginResponse = await loginUser(userData.email, userData.password);\n  \n  return {\n    access_token: loginResponse.access_token,\n    user: loginResponse.user,\n  };\n};\n\nexport const logoutUser = async () => {\n  try {\n    await api.post('/auth/logout');\n  } catch (error) {\n    // Ignore logout errors\n    console.log('Logout error:', error);\n  }\n};\n\nexport const getCurrentUser = async () => {\n  const response = await api.get('/auth/me');\n  return response.data;\n};\n\nexport const refreshToken = async () => {\n  const response = await api.post('/auth/refresh');\n  return response.data;\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}